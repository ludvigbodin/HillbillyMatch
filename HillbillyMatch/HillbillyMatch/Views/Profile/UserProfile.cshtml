@model HillbillyMatch.Models.UserProfileViewModel

@{
    ViewBag.Title = "User Profile";
}

@*<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>*@
<script>
    var userId = "@Model.UserId"
</script>
<script>
    $(function () {
        $('[data-toggle="popover"]').popover()
    })
</script>


<div class="container-fluid">

    <div class="row">
        <div class="col-md-4">
            <header class="header theiaStickySidebar">
                <div class="profile-img">
                    @{
                        var imgSrc = "";
                        if (Model.Image != null)
                        {
                            var base64 = Convert.ToBase64String(Model.Image);
                            imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                        }
                        else
                        {
                            imgSrc = "/Content/Images/noimage.jpg";
                        }
                        <img class="img-responsive" src="@imgSrc" alt="No image" width="280" height="280" />
                    }
                </div>
                <hr />
                <div class="content">
                    <h2>@Model.Firstname @Model.Lastname</h2>

                    <div class="about-text">
                        @{
                            if (Model.Description != null)
                            {
                                <p>@Model.Description</p>
                            }
                            else
                            {
                                <p>
                                    Credibly embrace visionary internal or "organic" sources and business benefits. Collaboratively


                                    integrate efficient portals rather than customized customer service. Assertively deliver


                                    frictionless services via leveraged interfaces. Conveniently evisculate accurate sources and
                                    process-centric ifpertise.
                                </p>
                            }

                        }

                    </div>
                    <br />
                    <hr />

                    <div class="doesWeMatch">
                        <button type="button" class="btn btn-primary" data-toggle="popover" title="@HillbillyMatch.International.AppResources.DoesWeMatch" data-content="@HillbillyMatch.International.AppResources.YouMatch @Model.MatchingPercentage%">@HillbillyMatch.International.AppResources.DoesWeMatch</button>
                    </div>


                    <br />
                    <hr />

                    <div class="userProfileRelationStatusContent">
                        @{
                            switch (Model.RelationStatusToIdentity)
                            {
                                case HillbillyMatch.Models.RelationStatusToIdentity.IsFriend:
                                    <a href="#" class="deleteFriendUserProfile" data-post-id="@Model.RelationStatusId" data-user-id="@Model.UserId">@HillbillyMatch.International.AppResources.DeleteFriend</a>
                                    break;
                                case HillbillyMatch.Models.RelationStatusToIdentity.HasSendRequest:
                                    <a href="#" class="withdrawRequestUserProfile" data-post-id="@Model.RelationStatusId" data-user-id="@Model.UserId">@HillbillyMatch.International.AppResources.WithdrawRequest</a>
                                    break;
                                case HillbillyMatch.Models.RelationStatusToIdentity.HasRecievedRequest:
                                    <a href="#" class="acceptRequestUserProfile" data-post-id="@Model.RelationStatusId" data-user-id="@Model.UserId">@HillbillyMatch.International.AppResources.AcceptRequest</a>
                                    <br />
                                    <a href="#" class="declineRequestUserProfile" data-post-id="@Model.RelationStatusId" data-user-id="@Model.UserId">@HillbillyMatch.International.AppResources.DeclineRequest</a>
                                    break;
                                case HillbillyMatch.Models.RelationStatusToIdentity.IsNotFriend:
                                    <a href="#" class="sendRequestUserProfile" data-post-id="@Model.RelationStatusId" data-user-id="@Model.UserId">@HillbillyMatch.International.AppResources.SendRequest</a>
                                    break;
                                default:
                                    break;
                            }

                        }
                    </div>

                </div>

            </header>
            <!-- .header-->
        </div>
        <!-- .left-col-block -->


        <div class="col-md-8">

            <div>
                <ul class="nav nav-tabs">
                    <li>
                        @Html.ActionLink(HillbillyMatch.International.AppResources.Wall, "UserProfile", "Profile", Model.UserId, null)
                    </li>
                </ul>
            </div>
            <div id="updateDiv">
                @Html.Partial("_Posts", Model.Posts)
            </div>

        </div>
        <!-- Sticky -->
    </div>
    <!-- .right-col-block -->
</div>


@section scripts {
<script src="~/Scripts/notify/notify.min.js"></script>
<script src="~/Scripts/profile/profile-post.js"></script>
}

@section styles {
<link href="~/Content/profilepage-post-style.css/profilpage-post.css" rel="stylesheet" />
<link href="~/Content/profilepage-post-style.css/posts-style.css" rel="stylesheet" />
<link href="~/Content/profilepage-post-style.css/post-modal.css" rel="stylesheet" />
}
